// Copyright Epic Games, Inc. All Rights Reserved.


// Auto-generated by spvreflect please don't modify by hand

#pragma once

struct CalculateSmoothnessTermReflection
{
	static constexpr uint32_t dsetCount { 1 };


	struct DescSet0_Init
	{
		VkDescriptorSetLayoutBinding bindings[17];
		uint32_t					 nBindings { 17 };

		DescSet0_Init()
		{
			// Binding for:u_const_curr
			bindings[0] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 0,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:v_const_curr
			bindings[1] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 1,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:u_const_other
			bindings[2] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 2,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:v_const_other
			bindings[3] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 3,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:weights_curr
			bindings[4] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 4,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:A11_curr
			bindings[5] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 5,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:b1_curr
			bindings[6] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 6,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:A22_curr
			bindings[7] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 7,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:b2_curr
			bindings[8] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 8,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:A11_other
			bindings[9] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 9,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:b1_other
			bindings[10] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 10,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:A22_other
			bindings[11] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 11,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:b2_other
			bindings[12] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 12,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:u_update_curr
			bindings[13] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 13,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:v_update_curr
			bindings[14] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 14,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:u_update_other
			bindings[15] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 15,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
			// Binding for:v_update_other
			bindings[16] =
				VkDescriptorSetLayoutBinding
				{
					/*.binding*/ 16,
					/*.descriptorType*/ VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
					/*.descriptorCount*/ 1,
					/*.stageFlags*/ VK_SHADER_STAGE_COMPUTE_BIT,
					/*.pImmutableSamplers*/ nullptr
				};
		}
	};

	struct DescSet0_Update
	{
		VkWriteDescriptorSet		writes[17];
		uint32_t					nWrites { 17 };

		VkDescriptorBufferInfo		u_const_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		v_const_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		u_const_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		v_const_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		weights_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		A11_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		b1_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		A22_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		b2_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		A11_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		b1_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		A22_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		b2_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		u_update_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		v_update_currDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		u_update_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };
		VkDescriptorBufferInfo		v_update_otherDesc{ VK_NULL_HANDLE, 0, VK_WHOLE_SIZE };

		DescSet0_Update(VkBuffer u_const_curr, VkBuffer v_const_curr, VkBuffer u_const_other, VkBuffer v_const_other, VkBuffer weights_curr, VkBuffer A11_curr, VkBuffer b1_curr, VkBuffer A22_curr, VkBuffer b2_curr, VkBuffer A11_other, VkBuffer b1_other, VkBuffer A22_other, VkBuffer b2_other, VkBuffer u_update_curr, VkBuffer v_update_curr, VkBuffer u_update_other, VkBuffer v_update_other)
		{
			u_const_currDesc.buffer = u_const_curr;

			writes[0] = {};
			writes[0].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[0].pNext = nullptr;
            writes[0].dstSet = 0;
            writes[0].dstBinding = 0;
            writes[0].descriptorCount = 1;
            writes[0].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[0].pBufferInfo = &u_const_currDesc;

			v_const_currDesc.buffer = v_const_curr;

			writes[1] = {};
			writes[1].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[1].pNext = nullptr;
            writes[1].dstSet = 0;
            writes[1].dstBinding = 1;
            writes[1].descriptorCount = 1;
            writes[1].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[1].pBufferInfo = &v_const_currDesc;

			u_const_otherDesc.buffer = u_const_other;

			writes[2] = {};
			writes[2].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[2].pNext = nullptr;
            writes[2].dstSet = 0;
            writes[2].dstBinding = 2;
            writes[2].descriptorCount = 1;
            writes[2].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[2].pBufferInfo = &u_const_otherDesc;

			v_const_otherDesc.buffer = v_const_other;

			writes[3] = {};
			writes[3].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[3].pNext = nullptr;
            writes[3].dstSet = 0;
            writes[3].dstBinding = 3;
            writes[3].descriptorCount = 1;
            writes[3].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[3].pBufferInfo = &v_const_otherDesc;

			weights_currDesc.buffer = weights_curr;

			writes[4] = {};
			writes[4].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[4].pNext = nullptr;
            writes[4].dstSet = 0;
            writes[4].dstBinding = 4;
            writes[4].descriptorCount = 1;
            writes[4].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[4].pBufferInfo = &weights_currDesc;

			A11_currDesc.buffer = A11_curr;

			writes[5] = {};
			writes[5].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[5].pNext = nullptr;
            writes[5].dstSet = 0;
            writes[5].dstBinding = 5;
            writes[5].descriptorCount = 1;
            writes[5].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[5].pBufferInfo = &A11_currDesc;

			b1_currDesc.buffer = b1_curr;

			writes[6] = {};
			writes[6].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[6].pNext = nullptr;
            writes[6].dstSet = 0;
            writes[6].dstBinding = 6;
            writes[6].descriptorCount = 1;
            writes[6].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[6].pBufferInfo = &b1_currDesc;

			A22_currDesc.buffer = A22_curr;

			writes[7] = {};
			writes[7].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[7].pNext = nullptr;
            writes[7].dstSet = 0;
            writes[7].dstBinding = 7;
            writes[7].descriptorCount = 1;
            writes[7].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[7].pBufferInfo = &A22_currDesc;

			b2_currDesc.buffer = b2_curr;

			writes[8] = {};
			writes[8].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[8].pNext = nullptr;
            writes[8].dstSet = 0;
            writes[8].dstBinding = 8;
            writes[8].descriptorCount = 1;
            writes[8].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[8].pBufferInfo = &b2_currDesc;

			A11_otherDesc.buffer = A11_other;

			writes[9] = {};
			writes[9].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[9].pNext = nullptr;
            writes[9].dstSet = 0;
            writes[9].dstBinding = 9;
            writes[9].descriptorCount = 1;
            writes[9].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[9].pBufferInfo = &A11_otherDesc;

			b1_otherDesc.buffer = b1_other;

			writes[10] = {};
			writes[10].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[10].pNext = nullptr;
            writes[10].dstSet = 0;
            writes[10].dstBinding = 10;
            writes[10].descriptorCount = 1;
            writes[10].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[10].pBufferInfo = &b1_otherDesc;

			A22_otherDesc.buffer = A22_other;

			writes[11] = {};
			writes[11].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[11].pNext = nullptr;
            writes[11].dstSet = 0;
            writes[11].dstBinding = 11;
            writes[11].descriptorCount = 1;
            writes[11].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[11].pBufferInfo = &A22_otherDesc;

			b2_otherDesc.buffer = b2_other;

			writes[12] = {};
			writes[12].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[12].pNext = nullptr;
            writes[12].dstSet = 0;
            writes[12].dstBinding = 12;
            writes[12].descriptorCount = 1;
            writes[12].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[12].pBufferInfo = &b2_otherDesc;

			u_update_currDesc.buffer = u_update_curr;

			writes[13] = {};
			writes[13].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[13].pNext = nullptr;
            writes[13].dstSet = 0;
            writes[13].dstBinding = 13;
            writes[13].descriptorCount = 1;
            writes[13].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[13].pBufferInfo = &u_update_currDesc;

			v_update_currDesc.buffer = v_update_curr;

			writes[14] = {};
			writes[14].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[14].pNext = nullptr;
            writes[14].dstSet = 0;
            writes[14].dstBinding = 14;
            writes[14].descriptorCount = 1;
            writes[14].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[14].pBufferInfo = &v_update_currDesc;

			u_update_otherDesc.buffer = u_update_other;

			writes[15] = {};
			writes[15].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[15].pNext = nullptr;
            writes[15].dstSet = 0;
            writes[15].dstBinding = 15;
            writes[15].descriptorCount = 1;
            writes[15].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[15].pBufferInfo = &u_update_otherDesc;

			v_update_otherDesc.buffer = v_update_other;

			writes[16] = {};
			writes[16].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
			writes[16].pNext = nullptr;
            writes[16].dstSet = 0;
            writes[16].dstBinding = 16;
            writes[16].descriptorCount = 1;
            writes[16].descriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;
            writes[16].pBufferInfo = &v_update_otherDesc;
		}

	};
};

